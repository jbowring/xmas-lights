{"1711657918": {"name": "static flash", "script": "def fun(x):\n    return x\n\nresult = [[fun(255) if (ticks % 2 == 0) else 0] * 3] * max_leds", "active": false, "author": "Joel", "error": null}, "4168134907": {"name": "Test new", "script": "# Pre-imported modules:\n#   math\n#   random\n#\n# Parameters:\n#   max_leds: LEDs in the string\n#   ticks: increments with each call\n#   timestep_ms: fixed duration between each tick\n#\n# Output:\n#   Put list of [max_leds * [R, G, B]] values into\n#   variable `result` (values mut be between 0 and 255)\n#\n# Note:\n#   Any declared variables remain for the duration of the\n#   pattern and are available in future calls\n\nresult = [[\n  255 * ((ticks + led_index) % max_leds) /max_leds,\n  180 * ((ticks + led_index) % max_leds) /max_leds,\n  123 * ((ticks + led_index) % max_leds) /max_leds,\n] for led_index in range(max_leds)]", "active": true, "author": "Joel", "error": null}, "331035799": {"name": "test2", "script": "# Imported modules:\n#   math\n#   random\n#\n# Parameters:\n#   led_index: current LED\n#   max_leds: LEDs in the string\n#   time_seconds: current time as a float (starts at 0.0)\n#\n# Output:\n#   Put list of [R, G, B] values into variable `result`\n#   Values mut be between 0 and 255\n\nresult = [\n  255 * (time_seconds + led_index)/max_leds,\n  180 * (time_seconds + led_index)/max_leds,\n  123 * (time_seconds + led_index)/max_leds,\n]", "active": false, "author": "noone", "error": "ValueError: result values [256, 180, 123] are not between 0 and 255\n"}, "698419291": {"name": "New pattern", "script": "# Imported modules:\n#   math\n#   random\n#\n# Parameters:\n#   led_index: current LED\n#   max_leds: LEDs in the string\n#   time_seconds: current time as a float (starts at 0.0)\n#\n# Output:\n#   Put list of [R, G, B] values into variable `result`\n#   Values mut be between 0 and 255\n\nreturn", "active": false, "author": "Whoever you want", "error": "  File \"New pattern\", line 14, in <module>\nSyntaxError: 'return' outside function\n"}, "1836307817": {"name": "trapz", "script": "spaceFreq = 36\ntimeFreq = 0.035\n\ndef trapz(ang:float):\n    ang = ang % 360\n    if 0 <= ang < 120:\n        return 0.00\n    elif 120 <= ang < 180:\n        return (ang - 120)/60\n    elif 180 <= ang < 300:\n        return 1\n    else:\n        return (1 - (ang - 300)/60)\n\nresult = [[\n    int(200 * trapz(120 + spaceFreq*led_index + timeFreq*ticks)),\n    int(255 * trapz(240 + spaceFreq*led_index + timeFreq*ticks)),\n    int(255 * trapz(spaceFreq*led_index + timeFreq*ticks)),\n] for led_index in range(max_leds)]", "active": false, "author": "Tom", "error": null}}